# Multi-stage Dockerfile for GPU support
# Your current Dockerfile remains unchanged!

ARG BUILD_TARGET=development

# ===== DEVELOPMENT STAGE (MacBook Air Compatible) =====
FROM python:3.11-slim as development

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy and install CPU requirements (your current setup)
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# ===== PRODUCTION STAGE (H100/GPU Optimized) =====
FROM nvidia/cuda:12.1-devel-ubuntu22.04 as production

WORKDIR /app

# Install Python and system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3-pip \
    python3.11-dev \
    ffmpeg \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && ln -s /usr/bin/python3.11 /usr/bin/python

# Copy and install GPU requirements
COPY requirements-gpu.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# ===== FINAL STAGE =====
FROM ${BUILD_TARGET} as final

# Copy application files
COPY app.py config.py whisper_wrapper.py test_gpu_setup.py ./
COPY static/ ./static/
COPY prompts/ ./prompts/

# Create directories
RUN mkdir -p /tmp/audio_processing

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "app.py"] 